'a' '\'' '2' '"' ''
'\\' '\?' '\142' '\n'
'\0' '\00' '\000' '\75' '\076'
'\e'
'\8'
'¥'
'''
'ab'
"unescaped null and del characters are not in the accepted input set"
''
''
"this is a string"
"two""strings"
"a string with a\ttab and\na newline"
"octal escape: ab\143d"
"digits \76\758 should not be treated as octal"
"a \n c"
""
"graphic characters: ! # % ^ & * ( ) - _ + = ~ [ ] \\ | ; : ' \" { } , . < > / ? $ @ `"
"strings cannot have fak\e escape sequences either"
"$ is OK but ¥ is not"
"embedded newlines
should provoke errors"
"invalid \escape sequence and
embedded newline in the same string!"
'c'
/* comment */
/* * */
/**/
/*" comment that looks like a string "*/
"/* string that looks like a comment */"
/* " ' */
/* one *//* two */
/*
 * multi-line comment
 */
identifiers
i j k x1 x2 a_var
snake_case CamelCase lowerCamelCase
_nothing_to_see_here
_123
1_not_ok
0_0
"integral constants"
123 0 456,789
-1 2-1 2+2
01 3.14 1. .1
"integer suffixes are not allowed and should be marked as invalid identifiers"
2147483647l 65536u
65535
65536
2147483647
2147483648
4294967295
4294967296
"strings with overflowing integers should be fine"
"4294967296"

reserved_words
break char continue do else for goto if int long
return signed short unsigned void while

not_reserved_words
Break Char Continue Do Else For Goto If Int Long
Return Signed Short Unsigned Void While

operators
!   %   ^   &   *   -   +   =   ~   |   <   >   /   ?
separators
(   )   [   ]   {   }   ,   ;   :
"compound assignment operators"
+=  -=  *=  /=  %=  <<=  >>=  &=  ^=  |=
i += 1;
k = i & j;
&var
"compound operators"
++  --  <<  >>  <=  >=  ==  !=  &&  ||
a && b; j++;
if (x != 0) {
    x ? y : z;
}